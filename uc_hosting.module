<?php
/**
 * Implementation of hook_help
 *
 * Broken up into seperate strings for translatability
 */
function uc_hosting_help ($path, $arg) {

  $help_text = '';

  if ($path == 'admin/help#uc_hosting') {
    $help_text .= '<p>' . t('This module provides several features to ubercart products on an Ã†gir platform. ');
    $help_list = array(
      l(t('Enable all quota attributes'), 'admin/store/hosting/quotas'),
      l(t('Generate a demo product class'), 'admin/store/hosting/product-classes'),
      t('Create a product in that class'),
      l(t('Enable the hosting integration feature for that product'), 'admin/store/hosting')
    );
    $help_text .= theme('item_list', $help_list, t('Quick start instructions:'), 'ol');
  }

  return $help_text;
}

/**
 * Implementation of hook_menu
 */
function uc_hosting_menu () {

  $items = array();

  $items['tests/hosting-uc'] = array( // TODO Delete me after I'm unnecessary
    'title' => t('Ubercart integration test page'),
    'access arguments' => array('access administration pages'),
    'page callback' => 'uc_hosting_test_page',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function uc_hosting_test_page () {
  return '';
}

/**
 * Validate that Mr. shopper is not duplicating a client
 */
function uc_hosting_form_uc_cart_checkout_form_alter (&$form, $form_state) {
  // TODO Set a validation function
  // $form[#validate][] = 'uc_hosting_checkout_validation';
}

/**
 *
 */
function uc_hosting_checkout_validation ($form, $form_state) {
  // TODO The submitted billing info will be used to modify clients
  // We need to make sure that data is not going to duplicate
  // an existing client first.
}

/**
 * Add a checkout pane to ubercart that will allow us to select a client
 */
function uc_hosting_checkout_pane () {
  $panes[] = array(
    'id' => 'hosting',
    'callback' => 'uc_hosting_checkout_options_pane',
    'title' => t('Aegir options'),
    'desc' => t("Let the cusotmer choose aegir related options."),
    'weight' => 1,
    'process' => TRUE,
    'collapsible' => FALSE,
  );
  return $panes;
}

/**
 * Process the checkout pane
 */
function uc_hosting_checkout_options_pane($op, &$arg1, $arg2) {
  switch ($op) {
    case 'view':
      $return = array(
        'description' => t(''),
        'theme' => NULL,
        'next-button' => FALSE,
      );
      // If the user is logged in, offer to let them choose which client to buy for
      global $user;
      if ($user->uid != 0) {
        $fake_node = new stdClass();
        $fake_node->client = 0;
        $return['contents']['target_client'] = array(
          '#type' => 'textfield',
          '#required' => TRUE,
          '#title' => t('Aegir client to apply this purchase to'),
          '#default_value' => _hosting_client_site_default($fake_node),
          '#description' => t('The client who this site belongs to.'),
          '#autocomplete_path' => 'hosting_client/autocomplete/client',
        );
      }
      return $return;
      break;
    case 'review':
      if ($arg1->client_nid) {
        return 'Client to be modified: ' . $arg1->client_title;
      }
      else {
        return NULL;
      }
      break;
    case 'process':
      $client = hosting_get_client($arg2['target_client']);
      $arg1->client_nid = $client->nid;
      $arg1->client_title = $client->title;
      // Make sure we get the client nid
      foreach ($arg1->products as $product) {
        if (_uc_hosting_products_has_feature ($product)) {
          $client = uc_hosting_update_client($arg1, $product);
        }
      }
      return uc_hosting_products_valid_client($client);
      break;
  }
}

/**
 * Update a client
 *
 * @param $order
 *   An Ubercart order
 * @param $product
 *   An Ubercart product
 * @param $callback
 *   The function callback to use
 */
function uc_hosting_update_client ($order, $product, $callback = NULL) {
  $user = user_load(array('uid' => $order->uid));

  // Attempt to get an existing order
  $old_order = db_fetch_array(db_query('SELECT * FROM {uc_hosting_orders} WHERE order_id = %d', $order->order_id));

  // Prepare the updated or new order
  $new_order = array(
    'order_id' => $order->order_id,
  );
  if ($old_order) {
    $new_order['site_url'] = $old_order['site_url'];
    $new_order['order_data'] = unserialize($old_order['order_data']);
  }

  // Attempt to retrieve the aegir client
  if ($order->client_nid) {
    $client = hosting_get_client($order->client_nid);
  }
  else {
    $client = hosting_get_client($old_order['client_nid']);
  }

  if (!$client) {
    // Create a client
    $client = _uc_hosting_add_client($user, $order);
  }  

  // Insert client data into the order_data
  if (!$new_order['client_nid']) {
    $new_order['client_nid'] = $client->nid;
  }

  // Call the callback if provided
  if (function_exists($callback)) {
    $callback($client, $product, &$new_order);
  }

  // Write the order to uc_hosting_orders
  $new_order['order_data'] = serialize($new_order['order_data']);

  if ($old_order['order_id']) {
    drupal_write_record('uc_hosting_orders', $new_order, 'order_id');
  }
  else {
    drupal_write_record('uc_hosting_orders', $new_order);
  }
  return $client;
}

/**
 * Helper function to add a client
 */
function _uc_hosting_add_client($user, $order) {
  $client = new stdClass();

  $client->type = 'client';
  
  $client->name = ($user->name) ? $user->name : strtolower($order->delivery_first_name);
  if ($user->uid) {
    $client->uid = $user->uid;
  } else {
    $client->uid = $order->uid;
  }

  // Set the client title to something that exists
  if ($order->delivery_company) {
    $client->title = $order->delivery_company;
  }
  else if ($order->billing_company) {
    $client->title = $order->billing_company;
  }
  else {
    $client->title = "{$order->delivery_first_name} {$order->delivery_last_name}";
  }

  // Make sure the client title is unique
  if ($suggestion = hosting_client_validate_suggest($client)) {
    $client->title = $suggestion;
  }

  // Validate the node
  node_validate($client);

  // Save the node
  $client->status = 1;
  node_save($client);

  // Give the user access rights as an aegir client
  $edit['hosting_client'] = $client->nid;
  $edit['mail'] = $client->email;
  $edit['status'] = 1;
  $edit['roles'][_hosting_client_get_role()] = TRUE;
  $user = user_save($user, $edit);

  $client = hosting_get_client($client->title);
  return $client;
}
