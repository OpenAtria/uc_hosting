<?php

/**
 * Implementation of hook_help
 *
 * Broken up into seperate strings for translatability
 */
function uc_hosting_help ($path, $arg) {

  $help_text = '';

  if ($path == 'admin/help#uc_hosting') {
    $help_text .= '<p>' . t('This module provides several features to ubercart products on an Ã†gir platform. ');
    $help_list = array(
      l(t('Enable all quota attributes'), 'admin/store/hosting/quotas'),
      l(t('Generate a demo product class'), 'admin/store/hosting/product-classes'),
      t('Create a product in that class'),
      l(t('Enable the hosting integration feature for that product'), 'admin/store/hosting')
    );
    $help_text .= theme('item_list', $help_list, t('Quick start instructions:'), 'ol');
  }

  return $help_text;
}

/**
 * Implementation of hook_menu
 */
function uc_hosting_menu () {

  $items = array();

  $items['tests/hosting-uc'] = array( // TODO Delete me after I'm unnecessary
    'title' => t('Ubercart integration test page'),
    'access arguments' => array('access administration pages'),
    'page callback' => 'uc_hosting_test_page',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function uc_hosting_test_page () {
  return '';
}

/**
 * Validate that Mr. shopper is not duplicating a client
 */
function uc_hosting_form_uc_cart_checkout_form_alter (&$form, $form_state) {
  // TODO Set a validation function
  // $form[#validate][] = 'uc_hosting_checkout_validation';
}

/**
 *
 */
function uc_hosting_checkout_validation ($form, $form_state) {
  // TODO The submitted billing info will be used to modify clients
  // We need to make sure that data is not going to duplicate
  // an existing client first.
}

/**
 * Update a client
 *
 * @param $order
 *   An Ubercart order
 * @param $product
 *   An Ubercart product
 * @param $callback
 *   The function callback to use
 */
function uc_hosting_update_client ($order, $product, $callback = NULL) {
  $user = user_load(array('uid' => $order->uid));

  // Attempt to get an existing order
  $old_order = db_fetch_array(db_query('SELECT * FROM {uc_hosting_orders} WHERE order_id = %d', $order->order_id));

  // Attempt to retrieve the aegir client
  $clients = hosting_get_client_from_user($user->uid);
  if ($clients) {
    // XXX: hack. we should be passed the selected client from the
    // order instead and validate that.
    foreach ($clients as $key => $value) {
      $client_test = node_load($key);
      if ($order->primary_email == $client_test->email) {
        $client = $client_test;
      }
    }
  } 
  if (!$client) {
    // Create a client
    $client = _uc_hosting_add_client($user, $order);
  }

  // Prepare the updated or new order
  $new_order = array(
    'order_id' => $order->order_id,
    'client_nid' => $client->nid
  );
  if ($old_order) {
    $new_order['site_url'] = $old_order['site_url'];
    $new_order['order_data'] = unserialize($old_order['order_data']);
  }

  // Call the callback if provided
  if (function_exists($callback)) {
    $callback($client, $product, &$new_order);
  }

  // Write the order to uc_hosting_orders
  $new_order['order_data'] = serialize($new_order['order_data']);
  if ($old_order['order_id']) {
    drupal_write_record('uc_hosting_orders', $new_order, 'order_id');
  }
  else {
    drupal_write_record('uc_hosting_orders', $new_order);
  }

}

/**
 * Helper function to add a client
 */
function _uc_hosting_add_client($user, $order) {
  $client = new stdClass();

  $client->type = 'client';
  $client->title = '';
  $client->email = ($user->mail) ? $user->mail : $order->primary_email;
  $client->email_confirm = $client->email;
  if ($order->delivery_last_name && $order->delivery_first_name) {
    $client->client_name = "{$order->delivery_first_name} {$order->delivery_last_name}";
    $client->name = ($user->name) ? $user->name : strtolower($order->delivery_first_name);
  } else {
    $client->client_name = "{$order->billing_first_name} {$order->billing_last_name}";
    $client->name = ($user->name) ? $user->name : strtolower($order->billing_first_name);
  }
  if ($user->uid) {
    $client->uid = $user->uid;
  } else {
    $client->uid = $order->uid;
  }

  // Set the client organisation to something that exists
  if ($order->delivery_company) {
    $client->organization = $order->delivery_company;
  }
  else if ($order->billing_company) {
    $client->organization = $order->billing_company;
  }
  else {
    $client->organization = $client->client_name;
  }

  // Validate the node
  node_validate($client);

  // Save the node
  $client->status = 1;
  node_save($client);

  // Give the user access rights as an aegir client
  $edit['hosting_client'] = $client->nid;
  $edit['mail'] = $client->email;
  $edit['status'] = 1;
  $edit['roles'][_hosting_client_get_role()] = TRUE;
  $user = user_save($user, $edit);

  $client = hosting_get_client_by_email($client->email);
  return $client;
}
