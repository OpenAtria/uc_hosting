<?php
// $Id$

/**
 * @file
 * Schemas, install, and uninstall hooks
 */

/**
 * Imp of hook_schema
 */
function uc_hosting_schema () {
  $schema = array();

  $schema['uc_hosting_products'] = array(
    'description' => 'Maps aegir product features to a specific hosting client',
    'fields' => array(
      'hpid' => array(
        'description' => 'IDs the hosting product.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pfid' => array(
        'description' => 'The {uc_product_features}.pfid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'model' => array(
        'description' => 'The product model.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('hpid'),
  );

  $schema['uc_hosting_quotas'] = array(
    'description' => 'Maps quotas to a specific attribute',
    'fields' => array(
      'qid' => array(
        'description' => 'IDs the quota.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'aid' => array(
        'description' => 'The {uc_attributes}.aid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
      ),
      'quota' => array(
        'description' => 'The machine name of the quota, as it would appear in {hosting_client_quota}.resource.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('qid'),
  );

  $schema['uc_hosting_quota_options'] = array(
    'description' => 'Stores integer values associated to options.',
    'fields' => array(
      'oid' => array(
        'description' => 'The value from {uc_attribute_options}.oid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'aid' => array(
        'description' => 'The id of the parent attribute.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'value' => array(
        'description' => 'The quota limit to assign when this option is chosen.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'oid' => array('oid'),
      'aid' => array('aid'),
    ),
  );

  $schema['uc_hosting_platform_options'] = array(
    'description' => 'Stores platform associations to options.',
    'fields' => array(
      'oid' => array(
        'description' => 'The value from {uc_attribute_options}.oid.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'aid' => array(
        'description' => 'The id of the parent attribute.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'platform' => array(
        'description' => 'The platform nid associated to this option.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0
      ),
    ),
    'indexes' => array(
      'oid' => array('oid'),
      'aid' => array('aid'),
    ),
  );

  return $schema;
}

/**
 * Imp of hook_install
 */
function uc_hosting_install () {
  drupal_install_schema('uc_hosting');
  // Generate the platform attribute
  db_query("INSERT INTO {uc_attributes} (name, label, ordering, required, display, description)
  VALUES ('%s', '%s', %d, %d, %d, '%s')",
    'platforms',
    'Platforms Available',
    -9,
    1,
    2,
    'Choose what kinds of sites you would like available for installation.');
  variable_set('uc_hosting_platforms_attribute', db_result(db_query('SELECT a.aid FROM {uc_attributes} a WHERE a.name = "%s"', 'platforms')));
}

/**
 * Imp of hook_uninstall
 */
function uc_hosting_uninstall () {
  drupal_uninstall_schema('uc_hosting');
  variable_del('uc_hosting_platforms_attribute');
}
